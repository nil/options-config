/*!
 * options-config v1.0.0
 * by Nil Vila
 */
export function validateChosenValue(e,t,l){const a=l[e],o=t[e],s=a.type,r=a.values,u=a.default;return o||!1===o||0===o?s&&!s.includes(typeof o)?(console.error("type not correct"),u):r&&!r.includes(o)?(console.error("value not accepted"),u):o:u}export default class{constructor(e){this.defaults=e}validate(e,t=this.defaults){const l={};for(const a in t)if(Object.prototype.hasOwnProperty.call(t,a)){let o,s,r=t[a];if(!r.default&&!1!==r.default&&0!==r.default||"object"==typeof r.default){l[a]={},r.default&&(o=r.type,s=r.values,r=r.default);for(const t in r)Object.prototype.hasOwnProperty.call(r,t)&&(r[t].type=r[t].type||o,r[t].values=r[t].values||s,l[a][t]=validateChosenValue(t,e[a],r))}else l[a]=validateChosenValue(a,e,t)}return l}}